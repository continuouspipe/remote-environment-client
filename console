#!/bin/bash

function help {
	echo "Remote Environment client."
	echo
	echo "Usage:"
	echo "  "$0" command"
	echo 
	echo "Available commands:"
	echo "   setup             Setup the remote environment client"
	echo "   create            Create the remote environment"
	echo "   watch             Watch local changes and synchronize with the remote environment"
	echo "   ssh               SSH into the remote environment container"
	echo "   build             Update the remove environment with local changes"
	echo "   destroy           Destroy the remote environment"
}

command_exists () {
    type "$1" &> /dev/null ;
}

function get_current_namespace()
{
    local  myresult='some value'
    echo "$myresult"
}

function setup {
	if ! command_exists kubectl ; then
		echo "[INSTALL] kubectl is being installed"

		if [[ "$OSTYPE" == "darwin"* ]]; then
			curl -O https://storage.googleapis.com/kubernetes-release/release/v1.4.3/bin/darwin/amd64/kubectl
			chmod +x kubectl
			sudo mv kubectl /usr/local/bin/kubectl
		else
			curl -O https://storage.googleapis.com/kubernetes-release/release/v1.4.3/bin/linux/amd64/kubectl
			chmod +x kubectl
			sudo mv kubectl /usr/bin/kubectl
		fi
	else
		echo "[OK] kubectl found"
	fi


}

while [[ $# -gt 0 ]]; do
	case $1 in
	    -h|--help|help)
	    help
	    exit 0
	    ;;
	    setup)
	    COMMAND=$1
	    ;;
	    *)
	        echo "Unknown option: "$1
	    ;;
	esac

	shift
done

if [ -z ${COMMAND+x} ]; then 
	help
	exit 0
fi

case $COMMAND in
	setup)
		setup
		;;
	*)
		echo "Command not found: "$COMMAND
		echo
		help
		exit 1
		;;
esac
